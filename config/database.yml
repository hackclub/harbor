# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  primary:
    <<: *default
    database: harbour1_development
  wakatime:
    database: harbour1_wt_development
    replica: true
  sailors_log:
    database: harbour1_sl_development
    replica: true
  warehouse:
    database: harbour1_wh_development
    replica: true

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  primary:
    <<: *default
    database: harbour1_test
  wakatime:
    database: harbour1_wt_test
    replica: true

# Store production database in the storage/ directory, which by default
# is mounted as a persistent Docker volume in config/deploy.yml.
production:
  primary:
    <<: *default
    adapter: postgresql
    encoding: unicode
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    url: <%= ENV['PROD_DATABASE_URL'] %>
  wakatime:
    adapter: postgresql
    encoding: unicode
    url: <%= ENV['WAKATIME_DATABASE_URL'] %>
    replica: true
  sailors_log:
    adapter: postgresql
    encoding: unicode
    url: <%= ENV['SAILORS_LOG_DATABASE_URL'] %>
    replica: true
  warehouse:
    adapter: postgresql
    encoding: unicode
    url: <%= ENV['WAREHOUSE_DATABASE_URL'] %>
    replica: true
  cache:
    <<: *default
    adapter: sqlite3
    database: storage/production_cache.sqlite3
    migrations_paths: db/cache_migrate
  cable:
    <<: *default
    adapter: sqlite3
    database: storage/production_cable.sqlite3
    migrations_paths: db/cable_migrate
